spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/reactlibrarydatabase?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Prashant@2504

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

spring.data.rest.base-path=/api

# here below we're adding the Spring security feature to our springboot backend application using Okta which allows us to add protected routes on the backend.
# here below Okta will verify the token before we use the token
okta.oauth2.client-id=0oajcrwujunVZXyfm5d7
okta.oauth2.issuer=https://dev-26094143.okta.com/oauth2/default


#####
#
# HTTPS configuration - Below configs are for Springboot HTTPS configs so our springboot application will correctly use the ssl certificate and HTTPS
#
#####
# Server web port
server.port=8443

# Enable HTTPS support (only accept HTTPS requests)
server.ssl.enabled=true

# Alias that identifies the key in the key store
server.ssl.key-alias=luv2code

# Keystore location
server.ssl.key-store=classpath:luv2code-keystore.p12

# Keystore password
server.ssl.key-store-password=secret

# Keystore format
server.ssl.key-store-type=PKCS12


